{"version":3,"sources":["components/ProjectCard.tsx","APIHelpers.tsx","components/PostCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProjectCard","title","description","demo","github","stack","className","href","projects","PostCard","readable_publish_date","url","App","useState","posts","setPosts","setLoading","useEffect","postsURL","a","fetch","then","resp","json","sorted","sort","b","positive_reactions_count","getPosts","map","project","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bc58788.chunk.js","sourcesContent":["import React from 'react';\n\nexport interface Project{\n    title: string;\n    description: string;\n    demo: string;\n    github: string;\n    stack: string;  \n}\n\n\nexport const ProjectCard = ({title, description, demo, github,stack}: Project) => {\n    return (\n        <>\n            <div className=\"project-card\">\n                <h2>{title}</h2>\n                <p>{description}</p>\n                <button> <a href={demo}>Demo </a></button>\n\n                <button><a href={github}>Github</a> </button>\n                <p>{stack}</p>\n            </div>          \n        </>\n    )\n} \n","import {Post} from './components/PostCard'\n// import {sortPosts} from './dataServices'\n\n\nexport const projects = [{title: \"Project Management App\", description: \"A 'Team todos' built with a crisp and intuitive user interface for easy collaboration.\" , demo: \"https://santiagosalazarpavajeau.github.io/react-projects/#/projects\", github: \"https://github.com/SantiagoSalazarPavajeau/react-projects\", stack: \"React Hooks, Redux, Rails\" },\n                  {title: \"Chords and Beats\", description: \"A music/game app where chords can be combined and saved into a song with a few clicks.\" , demo: \"https://santiagosalazarpavajeau.github.io/chords_beats_frontend/index.html\" , github: \"https://github.com/SantiagoSalazarPavajeau/chords_and_beats\", stack: \"Vanilla Javascript, Rails\"},\n                  {title: \"Young Papas Hobbies\" , description: \"A community for young fathers to share hobbies.\" , demo: \"http://pure-island-81017.herokuapp.com/\", github: \"https://github.com/SantiagoSalazarPavajeau/young-papa-cave\", stack: \"Ruby on Rails\"},\n                  {title: \"Satsang\" , description: \"An  app that connects people with interest in meditation.\", demo: \"https://www.loom.com/share/c0a6efd4313c4cc7b270524f4da66149\" , github: \"https://github.com/Duranzno/satsang-frontend/tree/dev/santiago\", stack: \"React-Hooks, Typescript, Next.js, Node\"},\n                  {title: \"Task-Process Log\", description: \"A tool to keep track of a companyâ€™s jobs and processes. Associates jobs and processes through tasks.\", demo: \"https://youtu.be/YbptjVShuwA?t=102\", github: \"https://github.com/SantiagoSalazarPavajeau/TASK-PROCESS-LOG\", stack: \"Ruby, Sinatra\"}]\n\n\n\nexport const postsURL: string = \"https://dev.to/api/articles?username=santispavajeau\"\n\n\n\nexport const getPosts = async (postsURL: string) => {\n    await fetch(postsURL)\n            .then(resp=> resp.json())\n            .then((posts) => {return posts})\n}\n\n","import React from 'react';\n\nexport interface Post{\n    type_of?: string;\n    id?: number; \n    title: string;\n    description: string;\n    readable_publish_date: string;\n    slug?: string;\n    path?: string;\n    url?: string;\n    comments_count?: number;\n    public_reactions_count?: number;\n    collection_id?: any;\n    published_timestamp?: Date;\n    positive_reactions_count?: number;\n    cover_image?: any;\n    social_image?: string;\n    canonical_url?: string;\n    created_at?: Date;\n    edited_at?: Date;\n    crossposted_at?: any;\n    published_at?: Date;\n    last_comment_at?: Date;\n    tag_list?: Array<string>;\n    tags?: string;\n    user?: object;\n}\n\n\nexport const PostCard = ({title, description, readable_publish_date, url}: Post) => {\n    return (\n        <>\n\n            <a href={url}>\n            <div className=\"project-card\">\n                <h2>{title}</h2>\n                <h3>{readable_publish_date}</h3>\n                <p>{description}</p>\n            </div>  \n            </a>        \n        </>\n    )\n} ","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {ProjectCard, Project} from './components/ProjectCard'\nimport {projects, postsURL} from './APIHelpers'\n// import {sortPosts} from './dataServices'\nimport {Post, PostCard} from './components/PostCard'\n\n\nfunction App() {\n\n  const [posts, setPosts] = useState<Post[]>()\n  const [loading, setLoading] = useState<boolean>(true)\n\n  useEffect(() =>{\n\n    const getPosts = async (postsURL: string) => {\n      await fetch(postsURL)\n              .then(resp=> resp.json())\n              .then((posts) => {\n                setLoading(false)\n                let sorted: Post[] = posts.sort((a: Post, b: Post) => {return b.positive_reactions_count && a.positive_reactions_count ? b.positive_reactions_count - a.positive_reactions_count : null} )\n                setPosts(sorted)\n              })\n  }\n  getPosts(postsURL)\n  }, [])\n\n  const renderProjects = () => {\n    return projects.map((project: Project) => <ProjectCard title={project.title} description={project.description} demo={project.demo} github={project.github} stack={project.stack} />)\n  }\n\n  const renderPosts = () => {\n\n    return posts && posts.map( (post: Post) =>  <PostCard title={post.title} description={post.description} readable_publish_date={post.readable_publish_date} url={post.url} />)\n  }\n\n  return (\n    <div className=\"App\">\n\n        <div className=\"header\">\n              <div className=\"pancake\">\n                <div className=\"profile-image\"/>\n                <div className=\"bio\">\n                  <p>Hello, I am </p> <h1>Santiago Salazar Pavajeau</h1> <p>I am a software engineer with a background in business and science with a passion for collaboration and innovative technical projects.</p>\n                  <button><a href=\"https://www.linkedin.com/in/santiago-salazar-pavajeau/\" >LinkedIn</a></button> \n                  <button><a href=\"https://twitter.com/santispavajeau\">Twitter</a></button>\n                  <button><a href=\"https://docs.google.com/document/d/1CMit1ahDwgmCB30EgI9euKEVLYz6YYXTIG7H19If2bg/edit?usp=sharing\">Resume</a></button>\n                  <button><a href=\"https://dev.to/santispavajeau\">Blog</a></button>\n                </div>\n              </div>\n        </div>\n          \n          <div className=\"header2\">\n            {renderProjects()}\n          </div>\n          <h1 className=\"blog-title\">Blog...</h1>       \n          <div className=\"header3\">\n            {renderPosts()}\n          </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}